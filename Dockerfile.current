################################################################################
#
# Recipe for an image with Open Dylan compiled from Git
#
################################################################################

##############################################
# Create an image containing our dependencies
##############################################

ARG OPENDYLAN_BASE

FROM ${OPENDYLAN_BASE} AS depends

# Add some manifest variables
ENV OPENDYLAN_VERSION "master"
ENV OPENDYLAN_PLATFORM "x86_64-linux"
ENV DEFT_VERSION "main"

# Our dependencies
ENV OPENDYLAN_DEPENDS "dumb-init autoconf automake bzip2 clang-19 git-core libgc-dev make"
# Set DYLAN variable
ENV DYLAN "/opt/opendylan"

# Add opendylan to the PATH
ENV PATH "/opt/opendylan/bin:${PATH}"

# Install dependencies
RUN apt-get update \
 && DEBIAN_FRONTEND=noninteractive apt-get -y install ${OPENDYLAN_DEPENDS} \
 && apt-get clean && rm -rf /var/lib/apt/lists/*

##########################################
# Create an image to perform the build in
##########################################

FROM depends AS build

WORKDIR /build

# Variables for the bootstrap compiler
ENV RELEASE_VERSION "2024.1"
ENV RELEASE_PLATFORM "${OPENDYLAN_PLATFORM}"
ENV RELEASE_DIR "opendylan-${RELEASE_VERSION}"
ENV RELEASE_TBZ "opendylan-${RELEASE_VERSION}-${RELEASE_PLATFORM}.tar.bz2"

# Copy the bootstrap compiler
COPY "${RELEASE_TBZ}" .

# Extract the bootstrap compiler
RUN tar xfj "${RELEASE_TBZ}" \
 && mv ${RELEASE_DIR} release \
 && rm ${RELEASE_TBZ}

# Check out, build and install opendylan
RUN git clone "https://github.com/dylan-lang/opendylan.git" --recursive \
 && cd opendylan \
 && git checkout ${OPENDYLAN_VERSION} \
 && ./autogen.sh \
 && ./configure --prefix=/opt/opendylan PATH="/build/release/bin:${PATH}" \
 && make PATH="/build/release/bin:${PATH}" \
 && make install

# Check out, build and install 'deft'
RUN git clone "https://github.com/dylan-lang/deft.git" --recursive \
 && cd deft \
 && git checkout ${DEFT_VERSION} \
 && export PATH="/build/release/bin:${PATH}" \
 && make \
 && make install

##########################
# Create the actual image
##########################

FROM depends

# Copy the newly build distribution
COPY --from=build /opt /opt
